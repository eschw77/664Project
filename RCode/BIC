```{r}
#AIC BIC

library(leaps)





MSE.bic = vector()
bic.num = vector()
MSE.aic = vector()

for (j in 1:7) {

  #setting respective fold to either training or testing
  train_data = train[-folds[[j]], ]
  test_data = train[folds[[j]], ]
  
  #doing best subset selection on our data
  regfit.train = regsubsets(loglatestPrice ~ ., data = train_data,  method= "backward" )
  reg.summary = summary(regfit.train)
  
  #via aic or bic, selecting which subset is the best, specifically selecting how many variables it has 
  bic.number = which.min(reg.summary$bic)
  bic.num[j] = bic.number
  #aic.number = which.min(reg.summary$aic)
  
  
  #creating the model with the respective number of coefficents
  bic.mdl = coef(regfit.train, bic.number)
  #aic.mdl = coef(regfit.train, aic.number)
  
  # testing the models that are created
  test.mat2 = model.matrix(loglatestPrice ~ ., data = test_data)
  bic.pred = test.mat2[, names(bic.mdl)] %*% bic.mdl
  #aic.pred = test.mat2[, names(aic.mdl)] %*% aic.mdl

  #computing the MSE for each model
  MSE.bic[j] = mean(( test_data$loglatestPrice - bic.pred)**2)
  #MSE.aic[j] = mean (( test_data$Y - aic.pred)**2)
}


paste( "Estimated MSE for BIC is ", sum(MSE.bic))

paste(  "Estimated MSE for AIC is "  ,sum(MSE.aic))
 
bic.num


```
